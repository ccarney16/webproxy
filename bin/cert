#!/bin/sh

### START VARIABLES ###
# These are where all variables needed for the program

_COMPOSE_EXE=""

### END VARIABLES ###

### START FUNCTIONS ###

# Returns the help message
function _return_help {
    echo ""
    echo "Cert Deployment Script"
    echo "Usage: $0 COMMAND [options]"
    echo ""
    echo "Main commands:"
    echo ""
    echo "deploy        Deploys a certificate for use in the proxy."
    echo "destroy       Delete a certificate deployment"
    echo ""
    echo "Built in options:"
    echo ""
    echo " --help  , -h     Returns this screen"
    echo " --domain, -d     Add a domain."
    echo ""
}

function to_table {
  
  if [[ -n "$2" ]]
    then
      local sep=$2
    else
      local sep=",$'\t'$';'"
  fi
  
   "$1" | column -t -s $sep;

}

function _is_registered {
    echo ""
}

function _get_certificate_info {
    $_COMPOSE_EXE run --rm \
    -l traefik.enable=false \
    certbot certificates -d ${1} | \
    grep -E "Certificate Name|Certificate Path|Private Key Path" | \
    sed -e "s/^[ \t]*//" -e "s/\r//g"
}

## Commands ##

function _command_deploy {
    local ssl_info="$(_get_certificate_info ${domain_list[0]})"

    if [[ -z $ssl_info ]]; then
        echo "SSL certificate for '${domain_list[0]}' does not exist"
        exit 5
    fi

    # Get proper name for the certificate
    local cert_name=$(echo $ssl_info | grep "Certificate Name" | sed -e 's/Certificate Name: //g' )

    echo "[[tls.certificates]]
        certFile = \"/etc/letsencrypt/live/${cert_name}/fullchain.pem\"
        keyFile = \"/etc/letsencrypt/live/${cert_name}/privkey.pem\"" > ./conf.d/traefik/traefik.d/50-${cert_name}.tls.toml
    echo "Config for '${cert_name}' deployed"
}

function _command_destroy {
    local ssl_info="$(_get_certificate_info ${domain_list[0]})"

    if [[ -z $ssl_info ]]; then
        echo "SSL certificate for '${domain_list[0]}' does not exist"
        exit
    fi

    # Get proper name for the certificate
    local cert_name=$(printf $ssl_info | grep "Certificate Name" | sed 's/Certificate Name: //g;')

    rm -f ./conf.d/traefik/traefik.d/50-${cert_name}.tls.toml
    echo "Config for '${cert_name}' destroyed"

}

### END FUNCTIONS ###

# initialize script
cd "$(dirname $0)/../"

# Fixing some nonsense with function returning
IFS=

_COMPOSE_EXE="$(command -v docker-compose)"

if [[ -z "$_COMPOSE_EXE" ]]; then
    echo "docker-compose not found, exiting..."
    exit 2
fi

# Split our arguements into seperate sections
_command=()
for ((i=1; i<=$#; i++)); do
    if [[ "${!i}" =~ "--" || ${!i} =~ "-" ]]; then
        case ${!i} in
            --help | -h)
                _return_help
                exit
                ;;
            --domain | -d)
                ((i++))
                domain_list+=("${!i}")
                ;;
        esac
    else
        _command+=("${!i}")
    fi
done

if [ ${#_command[@]} -gt 0 ]; then
    if [ "$(type -t "_command_${_command[0]}")" = "function" ]; then 
        "_command_${_command[0]}"
    else 
        _return_help
    fi
else 
	_return_help
fi